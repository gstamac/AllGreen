var AllGreen;(function(n){var i=function(){function n(n,t){this.connection=n,this.app=t,t.setServerStatus("Disconnected")}return n.prototype.connect=function(){var n=this.attachToHub(this.connection,this.app);return this.attachToConnectionEvents(this.connection,this.app),this.startConnection(this.connection,this.app),n},n.prototype.attachToHub=function(n,t){var i=n.createHubProxy("runnerHub");i.on("reload",function(){console.log("reloading..."),t.reload()});return i},n.prototype.attachToConnectionEvents=function(n,t){var i=this;n.stateChanged(function(n){console.log("state changed ",n,i.stateString(n.oldState)," -> ",i.stateString(n.newState))}),n.error(function(n){console.log("error",n),t.setServerStatus("Error: "+n)}),n.reconnecting(function(){console.log("reconnecting"),t.setServerStatus("Reconnecting...")}),n.reconnected(function(){console.log("reconnected"),t.setServerStatus("Reconnected")}),n.disconnected(function(){console.log("disconnected"),t.setServerStatus("Disconnected")})},n.prototype.startConnection=function(n,t){n.start().done(function(){console.log("done"),t.setServerStatus("Done")})},n.prototype.stateString=function(n){return n===$.signalR.connectionState.connecting?"connecting":n===$.signalR.connectionState.connected?"connected":n===$.signalR.connectionState.reconnecting?"reconnecting":n===$.signalR.connectionState.disconnected?"disconnected":void 0},n}(),t;n.Hub=i,t=function(){function n(n){this.hubProxy=n}return n.prototype.reset=function(){this.hubProxy.invoke("reset")},n.prototype.started=function(){this.hubProxy.invoke("started")},n.prototype.specFinished=function(n){this.hubProxy.invoke("specFinished",n)},n.prototype.finished=function(){this.hubProxy.invoke("finished")},n}(),n.HubReporter=t})(AllGreen||(AllGreen={})),function(){var n=AllGreen.App.getCurrent();if(n!=null){console.log("registering signalR hub");var t=$.hubConnection(),i=new AllGreen.Hub(t,n),r=i.connect();n.registerRunnerReporter(new AllGreen.HubReporter(r))}}()