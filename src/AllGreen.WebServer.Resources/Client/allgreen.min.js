var AllGreenApp=null,AllGreen;(function(n){(function(n){n[n.Undefined=0]="Undefined",n[n.Running=1]="Running",n[n.Passed=2]="Passed",n[n.Failed=3]="Failed",n[n.Skipped=4]="Skipped"})(n.SpecStatus||(n.SpecStatus={}));var i=n.SpecStatus,t=function(){function n(){this.serverReporter=null,this.runnerReporters=[],this.adapterFactories=[],this.runTests=function(){this.delayStartIfNeeded(this,this.adapterFactories)},this.reconnectEnabled=!0}return n.prototype.setServerReporter=function(n){n!=null&&(this.serverReporter=n)},n.prototype.registerRunnerReporter=function(n){n!=null&&this.runnerReporters.push(n)},n.prototype.registerAdapterFactory=function(n){var i=n.getName(),t=!1;this.adapterFactories.forEach(function(n){t=t||n.getName()==i}),t||this.adapterFactories.push(n)},n.prototype.delayStartIfNeeded=function(n,t){var i=this;n.isReady()?t.forEach(function(t){t.create(n).start()}):(console.log("delaying test run"),setTimeout(function(){return i.delayStartIfNeeded(n,t)},10))},n.prototype.setServerStatus=function(n){this.serverReporter.setServerStatus(n)},n.prototype.isReady=function(){for(var n=0;n<this.runnerReporters.length;n++)if(!this.runnerReporters[n].isReady())return!1;return!0},n.prototype.reset=function(){this.runnerReporters.forEach(function(n){n.reset()})},n.prototype.started=function(n){this.runnerReporters.forEach(function(t){t.started(n)})},n.prototype.specUpdated=function(n){this.runnerReporters.forEach(function(t){t.specUpdated(n)})},n.prototype.finished=function(){this.runnerReporters.forEach(function(n){n.finished()})},n.prototype.reload=function(){this.adapterFactories=[],this.reset(),$("#runner-iframe").prop("src","/~internal~/Client/runner.html")},n.prototype.log=function(n){for(var i=[],t=0;t<arguments.length-1;t++)i[t]=arguments[t+1];console.log(n,i)},n.prototype.enableReconnect=function(n){this.log("Reconnect "+(n?"enabled":"disabled")),this.reconnectEnabled=n},n}();n.App=t})(AllGreen||(AllGreen={}))